"" Self-defined by minlin.zhang

"" Turn off syntax highlight if the line is too long
set synmaxcol=256

"" Show invisible chars
"  ref: https://www.reddit.com/r/vim/comments/4hoa6e/what_do_you_use_for_your_listchars/
set list
set listchars=tab:→\ ,nbsp:␣,trail:•,extends:⟩,precedes:⟨

" use '\\' to toggle between two files
nnoremap <Leader><Leader> <C-^>

"" Map semicolon to colon for inputing command
nmap ; :

"" paste mode toggle
set nopaste
set pastetoggle=<F9>

"" Set tabs again, because the paste/pastetoggle setting will reset it
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set smarttab

"" Reset <leader> key. Somehow it isn't working here, should modify it in .vimrc
let mapleader='\'

"" Window move keys
let g:C_Ctrl_j = 'off'
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-l> <c-w>l
nnoremap <c-h> <c-w>h

"" In insert or command mode, move normally by using Ctrl.
" https://vi.stackexchange.com/a/10298
inoremap <c-h> <left>
inoremap <c-j> <down>
inoremap <c-k> <up>
inoremap <c-l> <right>
cnoremap <c-h> <left>
cnoremap <c-j> <down>
cnoremap <c-k> <up>
cnoremap <c-l> <right>

"" vim-bufferkill
noremap <leader>c :BD<CR>

"" Remove trailing whitespace on <leader>S using vim-better-whitespace
nnoremap <leader>S :StripWhitespace<CR>

"" vim-translator
vmap T <Plug>Translate
vmap R <Plug>TranslateReplace
vmap P <Plug>TranslateSpeak

"" Python fold settings
set foldmethod=indent
set foldlevel=99

"" Toggle ALE highlight
nnoremap <leader>ta :call <SID>ALEHighlightToggle()<CR>

let g:ale_highlight_enabled = 1
function! s:ALEHighlightToggle()
  if g:ale_highlight_enabled != 1
    let g:ale_highlight_enabled = 1
    highlight link ALEError SpellBad
    highlight link ALEWarning SpellCap
  else
    let g:ale_highlight_enabled = 0
    highlight link ALEError NONE
    highlight link ALEWarning NONE
  endif
endfunction


"" auto-pep8
let g:autopep8_max_line_length=120
nnoremap <leader>8 :Autopep8<CR>


"" Tagbar
map <leader>tb :TagbarToggle<CR>
let g:tagbar_autofocus=0
autocmd VimEnter * nested :TagbarClose
" autocmd VimEnter * nested :call tagbar#autoopen(1)
" autocmd BufEnter * nested :call tagbar#autoopen(0)

"" NERDTree & vim-nerdtree-tabs
map <leader>tt :NERDTreeToggle<CR>
map <leader>tf :NERDTreeTabsFind<CR>
map <leader>tl :call <SID>NERDTreeTabsAutoLocateCodeFilesToggle()<CR>
let g:nerdtree_tabs_open_on_console_startup=1
let g:nerdtree_tabs_autofind=0

" self-defined variable. Set to 1 will auto locate code files in NERDTree
" during buffer/tab switching. Please set g:nerdtree_tabs_autofind=0 to avoid
" some conflicting issues.
let g:nerdtree_tabs_autolocate_code_files=1

function! s:NERDTreeTabsAutoLocateCodeFilesToggle()
  if g:nerdtree_tabs_autolocate_code_files != 1
    let g:nerdtree_tabs_autolocate_code_files = 1
  else
    let g:nerdtree_tabs_autolocate_code_files = 0
  endif
endfunction

"" Highlight current file in NERDTree: https://stackoverflow.com/a/42154947
" Check if NERDTree is open or active. Adding namespace "s:" to avoid conflicting.
function! s:isNERDTreeOpen()
  return exists("t:NERDTreeBufName") && (bufwinnr(t:NERDTreeBufName) != -1)
endfunction

" Call NERDTreeFind iff NERDTree is active, current window contains a modifiable
" file, and we're not in vimdiff
function! s:syncTree()
  " echom 'from zml, syncTree is called!'
  if g:nerdtree_tabs_autolocate_code_files != 1
    return
  endif

  if &modifiable && s:isNERDTreeOpen() && strlen(expand('%')) > 0 && !&diff
    NERDTreeTabsFind
    wincmd p
  endif
endfunction

" Highlight currently open buffer in NERDTree
" Note: use whitelist to only enable for some file types, or use blacklist to
" disable triggering "__Tagbar__.2" buffer
" autocmd BufEnter *[^_][^_][^Tt][^a][^g][^b][^a][^r][^_][^_].* call s:syncTree()
" autocmd BufEnter *.{py,java,c,h,cpp,md,sh} call s:syncTree()
autocmd BufEnter *.{py,java,c,h,cpp,md,sh} call s:syncTree()

"" indent for javascript and coffeescript
autocmd BufNewFile,BufRead *.js,*.ejs setlocal expandtab ts=2 sts=2 sw=2
autocmd BufNewFile,BufReadPost *.coffee setl shiftwidth=2 expandtab
autocmd BufNewFile,BufRead *.html setlocal expandtab ts=2 sts=2 sw=2
